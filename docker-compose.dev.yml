version: '3.7'

name: aggr-server

networks:
  backend:
    name: aggr_backend

x-common-collector: &common-collector
  image: aggr-server
  build:
    context: .
    dockerfile: ./docker/Dockerfile.dev
    args:
      - WORKDIR=${WORKDIR}
  volumes:
    - ./src:${WORKDIR}
    - ./data:${WORKDIR}/data
    - /usr/src/app/node_modules
  environment:
    - NODE_ENV=development
    - API_ROLE=false
    - COLLECT_ROLE=true
  env_file:
    - ./.env.dev
  networks:
    - backend
  restart: unless-stopped

services:
  api:
    container_name: aggr-api
    image: aggr-server
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
    volumes:
      - ./src:${WORKDIR}
      - ./config/api/config.json:${WORKDIR}/config.json
      - ./data:${WORKDIR}/data
      - /usr/src/app/node_modules
    ports:
      - "${HOST_PORT:-3000}:${PORT}"
    environment:
      - NODE_ENV=development
      - API_ROLE=true
      - COLLECT_ROLE=false
    env_file:
      - ./.env.dev
    networks:
      - backend
    depends_on:
      - influx
    command: npm run dev

  collector-btc:
    <<: *common-collector
    container_name: aggr-collector-btc
    volumes:
      - ./src:${WORKDIR}
      - ./config/collectors/btc.json:${WORKDIR}/config.json
      - ./data:${WORKDIR}/data
      - /usr/src/app/node_modules
    environment:
      - COLLECTOR_ID=btc-collector
      - PAIRS=COINBASE:BTC-USD,BINANCE:btcusdt
    command: npm run dev
    depends_on:
      - influx

  collector-eth:
    <<: *common-collector
    container_name: aggr-collector-eth
    volumes:
      - ./src:${WORKDIR}
      - ./config/collectors/eth.json:${WORKDIR}/config.json
      - ./data:${WORKDIR}/data
      - /usr/src/app/node_modules
    environment:
      - COLLECTOR_ID=eth-collector
      - PAIRS=COINBASE:ETH-USD,BINANCE:ethusdt
    command: npm run dev
    depends_on:
      - influx

  influx:
    container_name: aggr-influx
    image: influxdb:1.8.10
    ports:
      - "${HOST_INFLUX_PORT:-8086}:${INFLUX_PORT}"
    volumes:
      - influx_data:/var/lib/influxdb
    networks:
      - backend
    environment:
      - INFLUXDB_HTTP_AUTH_ENABLED=false

  chronograf:
    container_name: aggr-chronograf
    image: chronograf:latest
    volumes:
      - chronograf_data:/var/lib/chronograf
    ports:
      - "${HOST_CHRONOGRAF_PORT:-8885}:8888"
    depends_on:
      - influx
    environment:
      - INFLUXDB_URL=http://${INFLUX_HOST}:${INFLUX_PORT}
    networks:
      - backend

volumes:
  influx_data:
  chronograf_data: